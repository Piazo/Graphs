package org.insa.graphs.model;

public class LabelAStar implements Comparable<LabelAStar> {
	
	private Node sommet_courrant;
	private boolean isMarked;
	protected float cout;
	private Arc pere;
	
	public static LabelAStar[] Labels;
	
	public LabelAStar(Node n, boolean isMarked, float cout, Arc pere) {
		this.setSommet_courrant(n);
		this.setMarked(isMarked);
		this.cout = cout;
		this.setPere(pere);
	}
	
	
	public float getCost() {
		return this.cout;
	}
	
	public void setCost(float cout) {
		this.cout=cout;
	}


	public Arc getPere() {
		return pere;
	}


	public void setPere(Arc pere) {
		this.pere = pere;
	}


	public boolean isMarked() {
		return isMarked;
	}


	public void setMarked(boolean isMarked) {
		this.isMarked = isMarked;
	}


	public Node getSommet_courrant() {
		return sommet_courrant;
	}


	public void setSommet_courrant(Node sommet_courrant) {
		this.sommet_courrant = sommet_courrant;
	}
	
	@Override
	public int compareTo(LabelAStar l) {
		return Float.compare(this.getCost(), l.getCost());
	}
	

}
